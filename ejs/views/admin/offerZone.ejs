<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offer Details</title>
    <link rel="stylesheet" href="../stylesheets/header_styles.css">
    <link rel="stylesheet" href="../stylesheets/footer_styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inria+Serif:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="../stylesheets/offer.css">

    <style>
        .product-entry {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.product-entry select {
  margin-right: 10px;
  padding: 5px;
}

.product-entry button {
  padding: 5px 10px;
  margin-left: 5px;
  cursor: pointer;
}

.product-entry button:hover {
  background-color: #f0f0f0;
}

    </style>
    
</head>
<body>
    <%- include('header', { title: 'Manage Offers' }) %>

<div class="app-wrapper">
  <div class="app-content pt-3 p-md-3 p-lg-4">
    <div class="container-xl">

      <div class="row g-3 mb-4 align-items-center justify-content-between">
        <h2>Manage Offers</h2>
        <button class="btn" onclick="showOfferForm()">Add New Offer</button>

        <!-- Offers Table -->
        <table id="offerTable" class="offer-table">
          <thead>
            <tr>
              <th>ID</th>
              <th>Title</th>
              <th>Discount (%)</th>
              <th>Valid From</th>
              <th>Valid Until</th>
              <th>Products</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% offers.forEach(offer => { %>
              <tr>
                <td><%= offer._id %></td>
                <td><%= offer.title %></td>
                <td><%= offer.discountPercentage %>%</td>
                <td><%= new Date(offer.validFrom).toLocaleDateString() %></td>
                <td><%= new Date(offer.validUntil).toLocaleDateString() %></td>
                <td>
                  <% if (offer.applicableProducts && offer.applicableProducts.length > 0) { %>
                    <% offer.applicableProducts.forEach(product => { %>
                      <span><%= product.name %></span><br>
                    <% }) %>
                  <% } else { %>
                    <span>No products selected</span>
                  <% } %>
                </td>
                <td>
                  <button onclick="editOffer('<%= offer._id %>')">Edit</button>
                  <button onclick="deleteOffer('<%= offer._id %>')">Delete</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Add/Edit Offer Modal -->
  <div id="offerModal" class="hidden">
    <h2 id="modalTitle">Add New Offer</h2>
    <form id="offerForm" onsubmit="handleOfferFormSubmit(event)">
      <!-- Title -->
      <label for="offerTitle">Title:</label>
      <input type="text" id="offerTitle" name="title" required>

      <!-- Description -->
      <label for="offerDescription">Description:</label>
      <textarea id="offerDescription" name="description" required></textarea>

      <!-- Discount Percentage -->
      <label for="offerDiscount">Discount Percentage:</label>
      <input type="number" id="offerDiscount" name="discountPercentage" required min="0" max="100">

      <!-- Valid From -->
      <label for="offerValidFrom">Valid From:</label>
      <input type="date" id="offerValidFrom" name="validFrom" required>

      <!-- Valid Until -->
      <label for="offerValidUntil">Valid Until:</label>
      <input type="date" id="offerValidUntil" name="validUntil" required>

      <!-- Products -->
      <label for="offerProducts">Select Products:</label>
<div id="productList">
  <div class="product-entry">
    <select name="applicableProducts[]" class="product-dropdown">
      <% products.forEach(product => { %>
        <option value="<%= product._id %>"><%= product.name %></option>
      <% }) %>
    </select>
    <button type="button" class="add-product">+</button>
  </div>
</div>



      <!-- Terms and Conditions -->
      <label for="offerTerms">Terms and Conditions:</label>
      <textarea id="offerTerms" name="termsAndConditions"></textarea>

      <!-- Submit Buttons -->
      <button type="submit">Save</button>
      <button type="button" onclick="hideOfferForm()">Cancel</button>
    </form>
  </div>
</div>

<script>
  let editOfferId = null;

  function showOfferForm() {
    document.getElementById('offerModal').classList.remove('hidden');
    document.getElementById('offerForm').reset();
    editOfferId = null;
    document.getElementById('modalTitle').innerText = 'Add New Offer';
  }

  function hideOfferForm() {
    document.getElementById('offerModal').classList.add('hidden');
  }

  async function handleOfferFormSubmit(event) {
  event.preventDefault();

  const formData = new FormData(document.getElementById('offerForm'));

  // Collect all selected products
  const selectedProducts = Array.from(
    document.querySelectorAll('.product-dropdown')
  ).map(select => select.value);

  const data = Object.fromEntries(formData.entries());
  data.applicableProducts = selectedProducts;

  const url = editOfferId ? `/offers/${editOfferId}` : '/offers/add';
  const method = editOfferId ? 'PUT' : 'POST';

  try {
    const response = await fetch(url, {
      method,
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });

    if (response.ok) {
      alert('Offer saved successfully!');
      hideOfferForm();
      location.reload();
    } else {
      const error = await response.json();
      alert(`Failed to save offer: ${error.error}`);
    }
  } catch (error) {
    console.error('Error:', error);
    alert('An error occurred while saving the offer.');
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const productList = document.getElementById('productList');

  // Add new product entry
  productList.addEventListener('click', event => {
    if (event.target.classList.contains('add-product')) {
      const newEntry = document.createElement('div');
      newEntry.className = 'product-entry';
      newEntry.innerHTML = `
        <select name="applicableProducts[]" class="product-dropdown">
          ${Array.from(document.querySelector('.product-dropdown').options)
            .map(option => `<option value="${option.value}">${option.text}</option>`)
            .join('')}
        </select>
        <button type="button" class="add-product">+</button>
        <button type="button" class="remove-product">-</button>
      `;
      productList.appendChild(newEntry);
    }
  });

  // Remove product entry
  productList.addEventListener('click', event => {
    if (event.target.classList.contains('remove-product')) {
      const entry = event.target.closest('.product-entry');
      if (entry) productList.removeChild(entry);
    }
  });
});




async function editOffer(offerId) {
  fetch(`/offers/${offerId}`)
    .then(response => response.json())
    .then(offer => {
      showOfferForm();

      document.getElementById('offerTitle').value = offer.title;
      document.getElementById('offerDescription').value = offer.description;
      document.getElementById('offerDiscount').value = offer.discountPercentage;
      document.getElementById('offerValidFrom').value = offer.validFrom.split('T')[0];
      document.getElementById('offerValidUntil').value = offer.validUntil.split('T')[0];
      document.getElementById('offerTerms').value = offer.termsAndConditions;

      const productList = document.getElementById('productList');
      productList.innerHTML = ''; // Clear existing entries

      offer.applicableProducts.forEach(productId => {
        const newEntry = document.createElement('div');
        newEntry.className = 'product-entry';
        newEntry.innerHTML = `
          <select name="applicableProducts[]" class="product-dropdown">
            ${products.map(
              product => `<option value="${product._id}" ${productId === product._id ? 'selected' : ''}>${product.name}</option>`
            ).join('')}
          </select>
          <button type="button" class="add-product">+</button>
          <button type="button" class="remove-product">-</button>
        `;
        productList.appendChild(newEntry);
      });
    })
    .catch(error => console.error('Error:', error));
}


  async function deleteOffer(offerId) {
    if (confirm('Are you sure you want to delete this offer?')) {
      try {
        const response = await fetch(`/offers/${offerId}`, {
          method: 'DELETE',
        });

        if (response.ok) {
          alert('Offer deleted successfully!');
          location.reload();
        } else {
          alert('Failed to delete offer.');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while deleting the offer.');
      }
    }
  }
</script>



<!-- Javascript -->
<script src="../assets/plugins/popper.min.js"></script>
<script src="../assets/plugins/bootstrap/js/bootstrap.min.js"></script>

<!-- Charts JS -->
<script src="../assets/plugins/chart.js/chart.min.js"></script>
<script src="../assets/js/index-charts.js"></script>

<!-- Page Specific JS -->
<script src="../assets/js/app.js"></script>


</body>

</html>